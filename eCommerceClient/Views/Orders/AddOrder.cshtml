@model Common.Orders

@{
    ViewData["Title"] = "AddOrder";
    var productId = ViewData["productId"] as string;
    var prefAddress = ViewData["prefAddress"] as string;
}

<h1>Confirm Order</h1>

<h4>Orders</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddOrder">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="productId" class="control-label"></label>
                <input asp-for="productId" type = "hidden" class="form-control" value=@productId />
                <span asp-validation-for="productId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Shipping Address</label>
                <input asp-for="orderId" class="form-control" value=@prefAddress />
                <span asp-validation-for="productId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="paymentType" class="control-label"></label>
                <select asp-for="paymentType" class="form-control">
                    <option value="card">Card</option>
                    <option value="credit">Credit</option>
                </select>
                <span asp-validation-for="paymentType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Confirm Payment" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
